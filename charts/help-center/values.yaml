projectEnv: staging

service:
  type: ClusterIP
  port: 80

replicaCount: 1

nodeSelector:
  node-role.kubernetes.io/worker: worker

strategy:
  type: RollingUpdate
  rollingUpdate:
     maxSurge: 25%
     maxUnavailable: 25%

database:
  migration:
    enabled: false

app:
  image: dregistry.pega.st:4567/pegas-web/help-center/app:staging
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 2
      memory: "2Gi"
    requests:
      cpu: 1
      memory: "512Mi"

web:
  image: dregistry.pega.st:4567/pegas-web/help-center/web:staging
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 1
      memory: "512Mi"
    requests:
      cpu: 0.5
      memory: "256Mi"

imagePullSecrets: ["dregistry-secret"]

ingress:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/client-body-buffer-size: 16m
    nginx.ingress.kubernetes.io/client-body-size: 32m
  hosts:
    - host: help-staging.nordwindairlines.ru
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: help-center
              port:
                number: 80
    - host: supervisor.help-staging.nordwindairlines.ru
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: consumer
              port:
                number: 80
    - host: help-staging.pegasfly.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: help-center
              port:
                number: 80

cronjobs:
  - name: send-not-uploaded-forms
    enabled: true
    schedule: "*/5 * * * *"
    command: '["/usr/bin/php", "/var/www/bin/console", "app:send-not-uploaded-forms-to-one-c-upload-queue", "--env=prod"]'
    nodeSelector:
      node-role.kubernetes.io/worker: worker
  - name: send-plik-attachments
    enabled: true
    schedule: "*/5 * * * *"
    command: '["/usr/bin/php", "/var/www/bin/console", "app:send-plik-attachments-to-upload-queue", "--env=prod"]'
    nodeSelector:
      node-role.kubernetes.io/worker: worker
  - name: import-ticket-source
    enabled: true
    schedule: "0 */1 * * *"
    command: '["/usr/bin/php", "/var/www/bin/console", "app:import-ticket-source", "--env=prod", "--from-date=yesterday", "--to-date=now"]'
    nodeSelector:
      node-role.kubernetes.io/worker: worker
